module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    concat: {
      options: {
        separator: ';'
      },
      dist: {
        src: 'src/**/*.js',
        dest: 'dist/concat.js'
      },
      dev: {
        src: 'src/**/*.js',
        dest: 'dist/<%= pkg.name %>.min.js'
      }
    },
    uglify: {
      options: {
        banner: '/*! Generated by grunt-contrib-uglify on <%= grunt.template.today("yyyy-mm-dd") %> */\n'
      },
      dist: {
        files: {
          'dist/<%= pkg.name %>.min.js': ['<%= concat.dist.dest %>']
        }
      }
    },
    jshint: {
        files: ['Gruntfile.js', 'src/**/*.js', 'test/**/*.js']
    },
    clean: {
      cleanDistDir: {
        src: ['dist/**/*']
      },
      cleanConcatFiles: {
        src: ['dist/concat.js']
      }
    },
    jasmine: {
      src : 'src/**/*.js', 
      options : {
        specs : 'test/**/*Spec.js'
      }
    },
    watch: {
      watchSrcChange: {
        files: ['<%= jasmine.src %>'],
        tasks: ['jshint', 'jasmine', 'clean:cleanDistDir', 'concat:dev']
      },
      watchJsChange: {
        files: ['<%= jshint.files %>'],
        tasks: ['jshint']
      }
    }
  });

  // Load tasks
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-jasmine');

  // Default task(s).
  grunt.registerTask('test', ['jshint', 'jasmine']);
  grunt.registerTask('production', ['jshint', 'jasmine', 'clean:cleanDistDir', 
    'concat:dist', 'uglify', 'clean:cleanConcatFiles']);
  grunt.registerTask('default', ['jshint', 'jasmine', 'clean:cleanDistDir', 'concat:dev']);

};