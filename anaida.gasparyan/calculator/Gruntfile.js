module.exports = function(grunt) {

  // Configurable paths
  var config = {
    app: 'app',
    dist: 'dist',
    test: 'test'
  };

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    config: config,

    concat: {
      main: {
        src: '<%= config.app %>/scripts/**/*.js',
        dest: '<%= config.dist %>/scripts/<%= pkg.name %>.js'
      }
    },

    uglify: {
      options: {
        banner: '/*! Generated by grunt-contrib-uglify on <%= grunt.template.today("yyyy-mm-dd") %> */\n'
      },
      main: {
        files: {
          '<%= config.dist %>/scripts/<%= pkg.name %>.min.js': '<%= concat.main.dest %>'
        }
      }
    },

    jshint: {
      main: ['Gruntfile.js', '<%= config.app %>/scripts/**/*.js', '<%= config.app %>/**/*.js']
    },

    clean: {
      main: {
        src: ['<%= config.dist %>/**/*']
      }
    },

    jasmine: {
      main: {
        src : '<%= config.app %>/scripts/*.js', 
        options : {
          specs : '<%= config.test %>/spec/*.js'
        }
      }
    },

    watch: {
      watchSrcChange: {
        files: ['<%= jasmine.src %>'],
        tasks: ['jshint', 'jasmine', 'clean:cleanDistDir', 'concat:dev']
      },
      watchJsChange: {
        files: ['<%= jshint.files %>'],
        tasks: ['jshint']
      }
    }
  });

  // Load tasks
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-jasmine');

  // Default task(s).
  grunt.registerTask('test', ['jshint', 'jasmine']);
  grunt.registerTask('default', ['jshint', 'jasmine', 'clean', 'concat', 'uglify']);

};