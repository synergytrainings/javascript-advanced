define("Calculator",["Model","View"],function(a,b){return{init:function(c){var d=this;this.model=new a,this.model.init(),this.view=new b,this.view.init(c),this.view.setChangeListener(function(a){d.model.recalculate(a)}),this.model.setChangeListener(function(a){d.view.redraw(a)})}}}),define("Enums",function(){var a={Operations:{PLUS:"+",DIVIDE:"/",MULTIPLY:"*",MINUS:"-",EQUALS:"=",CLEAR:"C"}};return a}),define("Model",["Enums"],function(a){var b=function(){this.operand1,this.operand2,this.operation,this.result=0,this.changeListener};return b.prototype={init:function(){},setChangeListener:function(a){this.changeListener=a},recalculate:function(a){this.isOperation(a)?this.operatorEntered(a):this.numberEntered(a),this.changeListener(this.result)},isOperation:function(b){var c=a.Operations;for(var d in c)if(c[d]===b)return!0;return!1},operatorEntered:function(b){var c=a.Operations;switch(b){case c.EQUALS:this.operand1&&this.operand2&&this.operator?this.evaluate(this.operand1,this.operand2,this.operator):this.operand1&&this.operator?this.evaluate(this.operand1,this.operand1,this.operator):this.operand1&&(this.result=this.operand1);break;case c.CLEAR:this.resetCalculator();break;default:this.operand1&&this.operand2&&this.operator?(this.result=this.calculate(this.operand1,this.operand2,this.operator),this.operand1=this.result,this.operand2=null,this.operator=b):this.operand1&&(this.operator=b)}},resetCalculator:function(){this.operand1=null,this.operand2=null,this.operator=null,this.result=null},evaluate:function(a,b,c){this.result=this.calculate(a,b,c),this.operand1=this.result,this.operand2=null,this.operator=null},numberEntered:function(a){var b=+a;this.operand1&&this.operand2&&this.operator?(this.operand2=10*this.operand2+b,this.result=this.operand2):this.operand1&&this.operator?(this.operand2=b,this.result=this.operand2):this.operand1?(this.operand1=10*this.operand1+b,this.result=this.operand1):(this.operand1=b,this.result=this.operand1)},calculate:function(a,b,c){var d;switch(c){case"+":d=a+b;break;case"-":d=a-b;break;case"*":d=a*b;break;case"/":d=a/b;break;default:throw"Unsupported operation."}return d}},b}),define("View",function(){var a=function(){this.container,this.changeListener};return a.prototype={init:function(a){this.container=a;var b=this;$(".col-sm-3",b.container).bind("click.calculator",function(){b.changeListener($(this).attr("data-key-value"))})},setChangeListener:function(a){this.changeListener=a},redraw:function(a){$("#result",this.container).val(a)}},a}),define("Project",function(){var a=function(){this.id,this.projectName,this.projectCost};return a.prototype={init:function(a,b,c){this.id=a,this.projectCost=c,this.projectName=b},setProjectName:function(a){this.projectName=a},setProjectCost:function(a){this.projectCost=a}},Model}),define("ProjectTable",["TableModel","TableView"],function(a,b){return{init:function(c){var d=this;this.model=new a,this.model.init(),this.view=new b,this.view.init(c),this.view.setChangeListener(function(a){d.model.changed(a)}),this.model.setChangeListener(function(a){d.view.redraw(a)})}}}),define("TableModel",function(){var a=function(){this.projects,this.changeListener};return a.prototype={init:function(){},setChangeListener:function(a){this.changeListener=a},remove:function(a){this.changeListener()},update:function(a){this.changeListener()},sort:function(a){this.changeListener()}},a}),define("TableView",function(){var a=function(){this.container,this.changeListener};return a.prototype={init:function(a){this.container=a;var b=this;$(".remove-row",b.container).bind("click.table.remove",function(){b.changeListener($(this).attr("data-id"))})},setChangeListener:function(a){this.changeListener=a},redraw:function(a){var b=this.container;b.empty(),$.foreach(a,function(){$(b).append(buildRow(project))})},buildRow:function(a){}},a}),requirejs.config({baseUrl:"scripts/calculator"}),requirejs(["Calculator"],function(a){a.init($(".main"))});